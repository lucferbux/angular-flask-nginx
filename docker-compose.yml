version: '3'

services:
  nginx:
    container_name: nginx_container
    restart: always
    image: nginx:1.15-alpine
    volumes:
      - ./frontend/dist/frontend:/usr/share/nginx/html
      # Uncomment for certbot
      #- ./data/nginx:/etc/nginx/conf.d
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - mynet
    #command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot disabled, it was used alongside init-letsencrypt to have autorenew certificates
  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  backend:
    container_name: backend_container
    restart: always
    expose:
      - "5000"
    build: ./backend
    # volumes:
    #   - /var/log:/var/log
    env_file:
      - .env
    networks:
      - mynet

  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    volumes:
      - /data/db:/data/db
    ports:
      - 27017:27017
    command: mongod
    networks:
      - mynet

  redis:
    image: redis:latest
    networks:
      - mynet

  worker:
    build: ./backend
    env_file:
      - .env
    command: celery -A src.celery worker --loglevel=info
    volumes:
      - /var/log:/var/log
    networks:
      - mynet

networks:
  mynet:

